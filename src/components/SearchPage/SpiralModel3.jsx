

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useEffect, useRef, useCallback, useMemo, useState } from "react";
import { useGLTF, PerspectiveCamera, useAnimations } from "@react-three/drei";
import model from './spiral3.glb';
import * as THREE from 'three';
import { useFrame } from "@react-three/fiber";


let mix;
let m;
let clip = [];
let a = 0;


export default function Model(props) {

  const group = useRef();
  const [index, updateIndex] = useState(false);
  const { nodes, materials, animations } = useGLTF(model);
  const { mixer, actions, clips } = useAnimations(animations, group);
  let mats = Object.entries(materials);

  const spiral = useRef();


  useFrame((state, time) => {

    if(index){
        mix.play().setLoop(THREE.LoopOnce).halt(2.3);

        //rotating spiral planes
        spiral.current.rotation.y = state.clock.getElapsedTime() * 0.1;
    }

  })



  useEffect(() => {

    props.update['s1'] = updateIndex

    m = mixer;
    //m.timeScale = 2.;  
    clip[0] = clips[0];
    mix = mixer.clipAction(clips[0]);
    mix.weight = 0.99;
    
    if( materials['Material.010'].userData.shader ){

      for (const a in materials){
        materials[a].userData.shader.uniforms.time.value = props.time;
      }

    }

  }, [])




  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <PerspectiveCamera
          ref={props.cam}
          name="Camera"
          makeDefault = { true }
          far={1000}
          near={0.1}
          fov={22.895}
          position={[0, 5.05, 15.813]}
        />
        <pointLight
          name="Spot"
          //intensity={15.389}
          intensity={55.389}          
          decay={3.5}
          position={[0, 6.228, -0.061]}
          rotation={[-Math.PI / 2, 0, 0]}
        />
        <group name="Plane006" ref={spiral}>
          <mesh
            name="Plane006_1"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_1.geometry}
            material={materials["Material.010"]}
            morphTargetDictionary={nodes.Plane006_1.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_1.morphTargetInfluences}
          />
          <mesh
            name="Plane006_2"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_2.geometry}
            material={materials["Material.005"]}
            morphTargetDictionary={nodes.Plane006_2.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_2.morphTargetInfluences}
          />
          <mesh
            name="Plane006_3"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_3.geometry}
            material={materials["Material.006"]}
            morphTargetDictionary={nodes.Plane006_3.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_3.morphTargetInfluences}
          />
          <mesh
            name="Plane006_4"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_4.geometry}
            material={materials["Material.004"]}
            morphTargetDictionary={nodes.Plane006_4.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_4.morphTargetInfluences}
          />
          <mesh
            name="Plane006_5"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_5.geometry}
            material={materials["Material.003"]}
            morphTargetDictionary={nodes.Plane006_5.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_5.morphTargetInfluences}
          />
          <mesh
            name="Plane006_6"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_6.geometry}
            material={materials["Material.007"]}
            morphTargetDictionary={nodes.Plane006_6.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_6.morphTargetInfluences}
          />
          <mesh
            name="Plane006_7"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_7.geometry}
            material={materials["Material.008"]}
            morphTargetDictionary={nodes.Plane006_7.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_7.morphTargetInfluences}
          />
          <mesh
            name="Plane006_8"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_8.geometry}
            material={materials["Material.009"]}
            morphTargetDictionary={nodes.Plane006_8.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_8.morphTargetInfluences}
          />
          <mesh
            name="Plane006_9"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_9.geometry}
            material={materials["Material.002"]}
            morphTargetDictionary={nodes.Plane006_9.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_9.morphTargetInfluences}
          />
          <mesh
            name="Plane006_10"
            castShadow
            receiveShadow
            geometry={nodes.Plane006_10.geometry}
            material={materials["Material.001"]}
            morphTargetDictionary={nodes.Plane006_10.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane006_10.morphTargetInfluences}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(model);



